// <auto-generated />
using System;
using Common.Api.Graphql.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Common.Api.Graphql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Common.Api.Graphql.Persistence.Models.CorrectiveAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("CorrectiveActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Reja Especial"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Reposición"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Sin faltante en la red pluvial"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Description = "Obra"
                        });
                });

            modelBuilder.Entity("Common.Api.Graphql.Persistence.Models.PreventiveAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("PreventiveActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Reporte"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Tapa Cemento"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Aviso"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Description = "Sin Peligro"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Description = "Peligroso"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Description = "Sin Faltante"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Description = "Tacos"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Description = "Limpieza"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Description = "No Existe Sumidero"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Description = "Reposición"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
